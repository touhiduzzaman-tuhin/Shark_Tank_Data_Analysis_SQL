-- fetch all the data from the data table
SELECT * FROM DATA;

-- find total episodes
SELECT COUNT(DISTINCT EP_NO) AS TOTAL_EPISODES FROM DATA;

SELECT MAX(EP_NO) AS TOTAL_EPISODES FROM DATA;

-- find total brand attend the show 
SELECT COUNT(DISTINCT BRAND) AS TOTAL_BRANDS FROM DATA;

-- find total brand who are find investor and total no of brand apply for investment
SELECT SUM(TOTAL_INVEST) NO_OF_BRAND_FIND_INVESTOR, COUNT(*) AS NO_OF_BRAND_APPLY_FOR_FUNDING
FROM (SELECT CASE
				WHEN AMOUNT_INVESTED_LAKHS > 0 THEN 1
				ELSE 0
				END AS TOTAL_INVEST
		FROM DATA) AS X;

-- find the success rate of finding apply in shark tank
SELECT (CAST(SUM(TOTAL_INVEST) AS FLOAT)/CAST(COUNT(*) AS FLOAT)*100)::NUMERIC(10, 2) AS FINDING_APPLY_SUCCESS_RATE
FROM (SELECT CASE
				WHEN AMOUNT_INVESTED_LAKHS > 0 THEN 1
				ELSE 0
				END AS TOTAL_INVEST
		FROM DATA) AS X;
		
-- find total number of male participent
SELECT SUM(MALE) TOTAL_MALE_PARTICIPENT FROM DATA;

-- find total number of female participent
SELECT SUM(FEMALE) TOTAL_FEMALE_PARTICIPENT FROM DATA;

-- find the gender ratio rate from the dataset
SELECT (SUM(MALE)/SUM(FEMALE))::NUMERIC(10, 2) AS GRNDER_RATIO FROM DATA;

-- find total invested amount
SELECT SUM(AMOUNT_INVESTED_LAKHS)/10 AS TOTAL_INVESTED_MILLION FROM DATA;

-- find avg equity taken
SELECT AVG(EQUITY_TAKEN_PERCENT)::NUMERIC(10, 2) AS AVERAGE_EQUITY_TAKEN
FROM (SELECT * FROM DATA WHERE EQUITY_TAKEN_PERCENT > 0) AS X;

-- find the highest deal taken from shark 
SELECT MAX(AMOUNT_INVESTED_LAKHS) AS HIGHEST_DEAL FROM DATA;

-- find higheest equity taken by shark
SELECT MAX(EQUITY_TAKEN_PERCENT) AS HIGHEST_EQUITY_PERCENTAGE_TAKEN FROM DATA;

-- find the startups that having at least one women
SELECT COUNT(*) AS ATLEAST_ONE_FEMALE_IN_TEAM FROM DATA WHERE FEMALE >= 1;

-- find the startups that having at least one women who got finding
SELECT COUNT(*) AS ATLEAST_ONE_FEMALE_IN_TEAM_GOT_FINDING
FROM (SELECT * FROM DATA WHERE AMOUNT_INVESTED_LAKHS > 0) AS X
WHERE X.FEMALE > 0;

-- find avg team members from the dataset
SELECT AVG(TEAM_MEMBERS)::NUMERIC(10, 2) AS AVERAGE_TEAM_MEMBERS FROM DATA;

-- find the average amount invested per deal
SELECT AVG(AMOUNT_INVESTED_LAKHS)::NUMERIC(10, 2) AS AVERAGE_AMOUNT_INVESTED_LAKHS
FROM (SELECT * FROM DATA WHERE AMOUNT_INVESTED_LAKHS > 0) AS X;

-- find the avg age group of contestants that group attend most in the event
SELECT AVG_AGE, COUNT(*) TOTAL_GROUP
FROM DATA
GROUP BY AVG_AGE
ORDER BY TOTAL_GROUP DESC
LIMIT 1;

-- find location group of contestants that group find most on the table
SELECT LOCATION, COUNT(*) AS TOTAL_FIND
FROM DATA
GROUP BY LOCATION
ORDER BY TOTAL_FIND DESC
LIMIT 1;

-- find sector group of contestants that group find most on the table
SELECT SECTOR, COUNT(*) TOTAL_PRESENT
FROM DATA
GROUP BY SECTOR
ORDER BY TOTAL_PRESENT DESC
LIMIT 1;

-- find the partners details, how many times they deal together
SELECT PARTNERS, COUNT(*) AS TOTAL
FROM DATA
WHERE PARTNERS != '-'
GROUP BY PARTNERS
ORDER BY TOTAL DESC;

-- find the total episode present, total deal happen, total amount invested, average equity taken percentage by each shark
(SELECT A.*, B.TOTAL_DEAL_HAPPEN, C.TOTAL_AMOUNT_INVESTED, C.AVERAGE_EQUITY_RAKEN_PERCENT
FROM (SELECT 'Ashneer' AS NAME, COUNT(ASHNEER_AMOUNT_INVESTED) TOTAL_EPISODE_PRESENT 
	  FROM DATA WHERE ASHNEER_AMOUNT_INVESTED IS NOT NULL) AS A
JOIN (SELECT 'Ashneer' AS NAME, COUNT(*) AS TOTAL_DEAL_HAPPEN
	  FROM (SELECT * FROM DATA WHERE ASHNEER_AMOUNT_INVESTED IS NOT NULL) AS X
	  WHERE X.ASHNEER_AMOUNT_INVESTED > 0) AS B ON A.NAME = B.NAME
JOIN (SELECT 'Ashneer' AS NAME, SUM(ASHNEER_AMOUNT_INVESTED)::NUMERIC(10, 2) AS TOTAL_AMOUNT_INVESTED, AVG(ASHNEER_EQUITY_TAKEN_PERCENT)::NUMERIC(10, 2) AS AVERAGE_EQUITY_RAKEN_PERCENT
	  FROM (SELECT * FROM DATA WHERE ASHNEER_AMOUNT_INVESTED IS NOT NULL) AS X
	  WHERE X.ASHNEER_AMOUNT_INVESTED > 0) AS C ON C.NAME = A.NAME)

-- Answer

(WITH TOTAL_PRESENT AS (SELECT * FROM DATA WHERE ASHNEER_AMOUNT_INVESTED IS NOT NULL),
TOTAL_DEAL AS (SELECT * FROM TOTAL_PRESENT WHERE TOTAL_PRESENT.ASHNEER_AMOUNT_INVESTED > 0)
SELECT A.*, B.TOTAL_DEAL_HAPPEN, C.TOTAL_AMOUNT_INVESTED, C.AVERAGE_EQUITY_RAKEN_PERCENT
FROM (SELECT 'Ashneer' AS NAME, COUNT(ASHNEER_AMOUNT_INVESTED) TOTAL_EPISODE_PRESENT
	  FROM TOTAL_PRESENT) AS A
JOIN (SELECT 'Ashneer' AS NAME, COUNT(*) AS TOTAL_DEAL_HAPPEN
	  FROM TOTAL_DEAL) AS B ON A.NAME = B.NAME
JOIN (SELECT 'Ashneer' AS NAME, SUM(ASHNEER_AMOUNT_INVESTED)::NUMERIC(10, 2) AS TOTAL_AMOUNT_INVESTED, 
	  AVG(ASHNEER_EQUITY_TAKEN_PERCENT)::NUMERIC(10, 2) AS AVERAGE_EQUITY_RAKEN_PERCENT
	  FROM TOTAL_DEAL) AS C ON C.NAME = A.NAME)

UNION

(WITH TOTAL_PRESENT AS (SELECT * FROM DATA WHERE NAMITA_AMOUNT_INVESTED IS NOT NULL),
TOTAL_DEAL AS (SELECT * FROM TOTAL_PRESENT WHERE TOTAL_PRESENT.NAMITA_AMOUNT_INVESTED > 0)
SELECT A.*, B.TOTAL_DEAL_HAPPEN, C.TOTAL_AMOUNT_INVESTED, C.AVERAGE_EQUITY_RAKEN_PERCENT
FROM (SELECT 'Namita' AS NAME, COUNT(NAMITA_AMOUNT_INVESTED) TOTAL_EPISODE_PRESENT
	  FROM TOTAL_PRESENT) AS A
JOIN (SELECT 'Namita' AS NAME, COUNT(*) AS TOTAL_DEAL_HAPPEN
	  FROM TOTAL_DEAL) AS B ON A.NAME = B.NAME
JOIN (SELECT 'Namita' AS NAME, SUM(NAMITA_AMOUNT_INVESTED)::NUMERIC(10, 2) AS TOTAL_AMOUNT_INVESTED, 
	  AVG(NAMITA_EQUITY_TAKEN_PERCENT)::NUMERIC(10, 2) AS AVERAGE_EQUITY_RAKEN_PERCENT
	  FROM TOTAL_DEAL) AS C ON C.NAME = A.NAME)

UNION

(WITH TOTAL_PRESENT AS (SELECT * FROM DATA WHERE ANUPAM_AMOUNT_INVESTED IS NOT NULL),
TOTAL_DEAL AS (SELECT * FROM TOTAL_PRESENT WHERE TOTAL_PRESENT.ANUPAM_AMOUNT_INVESTED > 0)
SELECT A.*, B.TOTAL_DEAL_HAPPEN, C.TOTAL_AMOUNT_INVESTED, C.AVERAGE_EQUITY_RAKEN_PERCENT
FROM (SELECT 'Anupam' AS NAME, COUNT(ANUPAM_AMOUNT_INVESTED) TOTAL_EPISODE_PRESENT
	  FROM TOTAL_PRESENT) AS A
JOIN (SELECT 'Anupam' AS NAME, COUNT(*) AS TOTAL_DEAL_HAPPEN
	  FROM TOTAL_DEAL) AS B ON A.NAME = B.NAME
JOIN (SELECT 'Anupam' AS NAME, SUM(ANUPAM_AMOUNT_INVESTED)::NUMERIC(10, 2) AS TOTAL_AMOUNT_INVESTED, 
	  AVG(ANUPAM_EQUITY_TAKEN_PERCENT)::NUMERIC(10, 2) AS AVERAGE_EQUITY_RAKEN_PERCENT
	  FROM TOTAL_DEAL) AS C ON C.NAME = A.NAME)

UNION

(WITH TOTAL_PRESENT AS (SELECT * FROM DATA WHERE VINEETA_AMOUNT_INVESTED IS NOT NULL),
TOTAL_DEAL AS (SELECT * FROM TOTAL_PRESENT WHERE TOTAL_PRESENT.VINEETA_AMOUNT_INVESTED > 0)
SELECT A.*, B.TOTAL_DEAL_HAPPEN, C.TOTAL_AMOUNT_INVESTED, C.AVERAGE_EQUITY_RAKEN_PERCENT
FROM (SELECT 'Vineeta' AS NAME, COUNT(VINEETA_AMOUNT_INVESTED) TOTAL_EPISODE_PRESENT
	  FROM TOTAL_PRESENT) AS A
JOIN (SELECT 'Vineeta' AS NAME, COUNT(*) AS TOTAL_DEAL_HAPPEN
	  FROM TOTAL_DEAL) AS B ON A.NAME = B.NAME
JOIN (SELECT 'Vineeta' AS NAME, SUM(VINEETA_AMOUNT_INVESTED)::NUMERIC(10, 2) AS TOTAL_AMOUNT_INVESTED, 
	  AVG(VINEETA_EQUITY_TAKEN_PERCENT)::NUMERIC(10, 2) AS AVERAGE_EQUITY_RAKEN_PERCENT
	  FROM TOTAL_DEAL) AS C ON C.NAME = A.NAME)

UNION
	  
(WITH TOTAL_PRESENT AS (SELECT * FROM DATA WHERE AMAN_AMOUNT_INVESTED IS NOT NULL),
TOTAL_DEAL AS (SELECT * FROM TOTAL_PRESENT WHERE TOTAL_PRESENT.AMAN_AMOUNT_INVESTED > 0)
SELECT A.*, B.TOTAL_DEAL_HAPPEN, C.TOTAL_AMOUNT_INVESTED, C.AVERAGE_EQUITY_RAKEN_PERCENT
FROM (SELECT 'Aman' AS NAME, COUNT(AMAN_AMOUNT_INVESTED) TOTAL_EPISODE_PRESENT
	  FROM TOTAL_PRESENT) AS A
JOIN (SELECT 'Aman' AS NAME, COUNT(*) AS TOTAL_DEAL_HAPPEN
	  FROM TOTAL_DEAL) AS B ON A.NAME = B.NAME
JOIN (SELECT 'Aman' AS NAME, SUM(AMAN_AMOUNT_INVESTED)::NUMERIC(10, 2) AS TOTAL_AMOUNT_INVESTED, 
	  AVG(AMAN_EQUITY_TAKEN_PERCENT)::NUMERIC(10, 2) AS AVERAGE_EQUITY_RAKEN_PERCENT
	  FROM TOTAL_DEAL) AS C ON C.NAME = A.NAME)

UNION

(WITH TOTAL_PRESENT AS (SELECT * FROM DATA WHERE PEYUSH_AMOUNT_INVESTED IS NOT NULL),
TOTAL_DEAL AS (SELECT * FROM TOTAL_PRESENT WHERE TOTAL_PRESENT.PEYUSH_AMOUNT_INVESTED > 0)
SELECT A.*, B.TOTAL_DEAL_HAPPEN, C.TOTAL_AMOUNT_INVESTED, C.AVERAGE_EQUITY_RAKEN_PERCENT
FROM (SELECT 'Peyush' AS NAME, COUNT(PEYUSH_AMOUNT_INVESTED) TOTAL_EPISODE_PRESENT
	  FROM TOTAL_PRESENT) AS A
JOIN (SELECT 'Peyush' AS NAME, COUNT(*) AS TOTAL_DEAL_HAPPEN
	  FROM TOTAL_DEAL) AS B ON A.NAME = B.NAME
JOIN (SELECT 'Peyush' AS NAME, SUM(PEYUSH_AMOUNT_INVESTED)::NUMERIC(10, 2) AS TOTAL_AMOUNT_INVESTED, 
	  AVG(PEYUSH_EQUITY_TAKEN_PERCENT)::NUMERIC(10, 2) AS AVERAGE_EQUITY_RAKEN_PERCENT
	  FROM TOTAL_DEAL) AS C ON C.NAME = A.NAME)

UNION

(WITH TOTAL_PRESENT AS (SELECT * FROM DATA WHERE GHAZAL_AMOUNT_INVESTED IS NOT NULL),
TOTAL_DEAL AS (SELECT * FROM TOTAL_PRESENT WHERE TOTAL_PRESENT.GHAZAL_AMOUNT_INVESTED > 0)
SELECT A.*, B.TOTAL_DEAL_HAPPEN, C.TOTAL_AMOUNT_INVESTED, C.AVERAGE_EQUITY_RAKEN_PERCENT
FROM (SELECT 'Ghazal' AS NAME, COUNT(GHAZAL_AMOUNT_INVESTED) TOTAL_EPISODE_PRESENT
	  FROM TOTAL_PRESENT) AS A
JOIN (SELECT 'Ghazal' AS NAME, COUNT(*) AS TOTAL_DEAL_HAPPEN
	  FROM TOTAL_DEAL) AS B ON A.NAME = B.NAME
JOIN (SELECT 'Ghazal' AS NAME, SUM(GHAZAL_AMOUNT_INVESTED)::NUMERIC(10, 2) AS TOTAL_AMOUNT_INVESTED, 
	  AVG(GHAZAL_EQUITY_TAKEN_PERCENT)::NUMERIC(10, 2) AS AVERAGE_EQUITY_RAKEN_PERCENT
	  FROM TOTAL_DEAL) AS C ON C.NAME = A.NAME)
	  
-- which is the startup in which the highest amount has been invested in each domain/sector
SELECT * 
FROM (SELECT BRAND, SECTOR, AMOUNT_INVESTED_LAKHS,
	  RANK() OVER(PARTITION BY SECTOR ORDER BY AMOUNT_INVESTED_LAKHS DESC) AS RNK
	  FROM DATA
	  WHERE AMOUNT_INVESTED_LAKHS > 0) AS X
WHERE X.RNK = 1;